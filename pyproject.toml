[project]
name = "httpx-negotiate-sspi"
version = "0.28.1"
description = "SSPI authentication for httpx"
authors = [{name = "Rob Blackbourn", email = "rob.blackbourn@gmail.com"}]
license = {text = "Apache-2.0"}
readme = "README.md"
dependencies = [
    "pywin32>=223",
    "httpx>0.16,<0.29",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pylint",
    "mypy",
]

[project.urls]
Homepage = "https://rob-blackbourn.github.io/httpx-negotiate-sspi"
Repository = "https://github.com/rob-blackbourn/httpx-negotiate-sspi"
Issues = "https://github.com/rob-blackbourn/httpx-negotiate-sspi/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# pylint
[tool.pylint.main]
py-version = "3.12"
jobs = 4

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_"]
bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata"]

[tool.pylint."messages control"]
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "use-implicit-booleaness-not-comparison-to-string",
    "use-implicit-booleaness-not-comparison-to-zero",
    "missing-module-docstring",
]

# pytest
[tool.pytest.ini_options]
testpaths = [
    "tests",
]
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "function"

# mypy
[tool.mypy]
files = [ "src/httpx_negotiate_sspi" ]

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pywintypes"
ignore_missing_imports = true
